version: '3'

services:

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    volumes:
      - './frontend:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development

  flask:
    command: backend/wait-for-it db:5432 --timeout=30 -- flask run --host=0.0.0.0
    build:
      context: .
      dockerfile: Dockerfile.flask
    volumes:
      - './backend:/app/backend'
      - './ssl_checker:/app/ssl_checker'
    ports:
      - '5000:5000'
    environment:
      - FLASK_APP=backend
      - FLASK_ENV=development
    env_file:
      - env/development.env
      - env/secret/development.env

  db:
    image: postgres:10
    volumes:
      - 'db:/var/lib/postgresql/data'

  broker:
    image: rabbitmq:3
    hostname: broker

  tasks:
    command: backend/wait-for-it broker:5672 --timeout=30 -- dramatiq backend.jobs --watch .
    build:
      context: .
      dockerfile: Dockerfile.flask
    volumes:
      - './backend:/app/backend'
      - './ssl_checker:/app/ssl_checker'
    env_file:
      - env/development.env
      - env/secret/development.env

  scheduler:
    command: backend/wait-for-it broker:5672 --timeout=30 -- python -m backend.scheduler
    build:
      context: .
      dockerfile: Dockerfile.flask
    volumes:
      - './backend:/app/backend'
      - './ssl_checker:/app/ssl_checker'
    env_file:
      - env/development.env
      - env/secret/development.env

volumes:
  db: {}
